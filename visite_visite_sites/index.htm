<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>Visite — Visite de sites (Mary)</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  <style>
    html,body,#map{{height:100%;margin:0;padding:0}}
    #app{{display:flex;flex-direction:column;height:100vh}}
    #top{{padding:6px;background:#f0f0f0;display:flex;gap:6px;align-items:center}}
    #content{{display:flex;flex:1;gap:6px}}
    #map{{flex:1}}
    #panel{{width:360px;overflow:auto;padding:8px;background:#fff}}
    button{{width:100%;box-sizing:border-box;margin:4px 0}}
  </style>
</head>
<body>
<div id="app">
  <div id="top">
    <input id="fileIn" type="file" accept=".zip" />
    <button id="loadBtn">Charger le projet .zip</button>
    <span id="status"></span>
  </div>
  <div id="content">
    <div id="map"></div>
    <div id="panel">
      <div><strong>Mary — Visite</strong></div>
      <div id="pointContent"></div>
      <div style="margin-top:8px;">Votre position: <div id="myPos"></div></div>
      <div>Distance: <div id="distance"></div></div>
      <div>Azimut: <div id="azimuth"></div></div>
      <div style="display:flex;gap:6px;margin-top:12px;">
        <button id="prev">Précédent</button>
        <button id="next">Suivant</button>
      </div>
    </div>
  </div>
</div>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.7.1/jszip.min.js"></script>
<script>
let map = L.map('map').setView([45,3], 6);
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {maxZoom: 19}).addTo(map);
let project = null, markers = [], currentIndex = 0;
const status = document.getElementById('status');

document.getElementById('loadBtn').addEventListener('click', async ()=>{
  const f = document.getElementById('fileIn').files[0];
  if(!f){ alert('Choisissez le fichier zip exporté par Editeur.'); return; }
  const data = await f.arrayBuffer();
  const zip = await JSZip.loadAsync(data);
  if(!zip.file('project.json')){ alert('Zip invalide : project.json introuvable'); return; }
  const pj = JSON.parse(await zip.file('project.json').async('string'));
  project = pj;
  status.textContent = 'Projet chargé: '+project.title;
  for(let i=0;i<project.points.length;i++){
    const p = project.points[i];
    if(p.media){
      const f = zip.file(p.media.name);
      if(f) p.media.dataURL = await f.async('base64').then(b=> 'data:'+p.media.type+';base64,'+b);
    }
    if(p.audio){
      const f2 = zip.file(p.audio.name);
      if(f2) p.audio.dataURL = await f2.async('base64').then(b=>'data:audio/webm;base64,'+b);
    }
  }
  renderMarkers();
  showPoint(0);
});

function renderMarkers(){
  markers.forEach(m=>map.removeLayer(m));
  markers=[];
  project.points.forEach((p, idx)=>{
    if(p.lat && p.lng){
      const mark = L.marker([p.lat,p.lng]).addTo(map).bindPopup(p.title||('Point '+(idx+1)));
      markers.push(mark);
    }
  });
  if(markers.length) map.fitBounds(L.featureGroup(markers).getBounds().pad(0.5));
}

function showPoint(i){
  if(!project) return;
  if(i<0 || i>=project.points.length){ alert('Avertissement: dernier point atteint'); return; }
  currentIndex = i;
  const p = project.points[i];
  const el = document.getElementById('pointContent');
  el.innerHTML = `<h3>${p.title||('Point '+(i+1))}</h3><div>${p.text||''}</div>`;
  if(p.media && p.media.dataURL){
    if(p.media.type.startsWith('image/')) el.innerHTML += `<div><img src="${p.media.dataURL}" style="max-width:100%"/></div>`;
    else if(p.media.type.startsWith('video/')) el.innerHTML += `<div><video controls style="max-width:100%"><source src="${p.media.dataURL}" type="${p.media.type}"></video></div>`;
  }
  if(p.audio && p.audio.dataURL) el.innerHTML += `<div><audio controls src="${p.audio.dataURL}"></audio></div>`;
  updateOrientationAndDistance();
}

document.getElementById('prev').addEventListener('click', ()=>{ if(currentIndex>0) showPoint(currentIndex-1); else alert('Déjà le premier point'); });
document.getElementById('next').addEventListener('click', ()=>{ if(currentIndex<project.points.length-1) showPoint(currentIndex+1); else alert('Avertissement: dernier point atteint'); });

// geolocation and distance/azimuth
function toRad(d){ return d * Math.PI/180; }
function toDeg(d){ return d * 180/Math.PI; }
function haversine(lat1,lon1,lat2,lon2){ const R=6371000; const dLat=toRad(lat2-lat1), dLon=toRad(lon2-lon1); const a = Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(toRad(lat1))*Math.cos(toRad(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2); const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)); return R*c; }
function bearing(lat1,lon1,lat2,lon2){ const y = Math.sin(toRad(lon2-lon1))*Math.cos(toRad(lat2)); const x = Math.cos(toRad(lat1))*Math.sin(toRad(lat2)) - Math.sin(toRad(lat1))*Math.cos(toRad(lat2))*Math.cos(toRad(lon2-lon1)); let brng = (toDeg(Math.atan2(y,x))+360)%360; return brng; }

let myMarker=null;
function updateOrientationAndDistance(){
  if(!navigator.geolocation) { document.getElementById('status').textContent='Géolocalisation non supportée'; return; }
  navigator.geolocation.getCurrentPosition(pos=>{ const lat = pos.coords.latitude, lon = pos.coords.longitude; document.getElementById('myPos').textContent = lat.toFixed(6)+', '+lon.toFixed(6); const p = project.points[currentIndex]; if(p.lat==null || p.lng==null){ document.getElementById('distance').textContent='Position du point inconnue'; document.getElementById('azimuth').textContent='—'; return; } const d = haversine(lat,lon,p.lat,p.lng); const b = bearing(lat,lon,p.lat,p.lng); document.getElementById('distance').textContent = (d<1000? Math.round(d)+' m' : (d/1000).toFixed(2)+' km'); document.getElementById('azimuth').textContent = 'Nord '+Math.round(b)+'°'; if(myMarker){ myMarker.setLatLng([lat,lon]); } else { myMarker = L.marker([lat,lon]).addTo(map); } }, err=>{ document.getElementById('status').textContent='Erreur geo: '+err.message; }, {enableHighAccuracy:true});
}

if('serviceWorker' in navigator){ navigator.serviceWorker.register('sw.js').catch(()=>{}); }
</script>
</body>
</html>
