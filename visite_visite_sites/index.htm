<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Visite de sites</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    body { font-family: Arial, sans-serif; margin: 0; padding: 0; }
    header { background: #2c3e50; color: white; padding: 10px; text-align: center; }
    #map { height: 300px; margin: 10px; border: 1px solid #ccc; }
    .point { border: 1px solid #aaa; padding: 10px; margin: 10px; border-radius: 8px; }
    .media-preview img, .media-preview video, .media-preview audio { max-width: 100%; margin-top: 8px; border-radius: 6px; }
    button { padding: 6px 12px; margin: 4px; cursor: pointer; }
  </style>
</head>
<body>
<header>
  <h1 id="siteTitle"></h1>
  <input type="file" id="importZip" accept=".zip" />
</header>
<div id="map"></div>
<div id="pointContainer"></div>
<div>
  <button id="prevBtn">Précédent</button>
  <button id="nextBtn">Suivant</button>
</div>
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jszip@3.10.1/dist/jszip.min.js"></script>
<script>
let points = [];
let currentIndex = 0;
let markers = [];
const pointContainer = document.getElementById("pointContainer");

const map = L.map('map').setView([44, 6], 8);
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  attribution: '© OpenStreetMap',
  maxZoom: 19
}).addTo(map);

document.getElementById("importZip").addEventListener("change", async function() {
  const file = this.files[0];
  if (!file) return;
  const jszip = new JSZip();
  const zip = await jszip.loadAsync(file);
  const project = JSON.parse(await zip.file("project.json").async("string"));
  document.getElementById("siteTitle").innerText = project.siteTitle;
  points = project.points;
  points.forEach((p, idx) => {
    if (p.lat && p.lng) {
      const marker = L.marker([p.lat, p.lng]).addTo(map).bindPopup(p.title);
      markers.push(marker);
    }
    // Restaurer médias depuis le zip
    if (zip.file(`medias/photo_${idx}.jpg`)) {
      p.photo = URL.createObjectURL(new Blob([await zip.file(`medias/photo_${idx}.jpg`).async("blob")]));
    }
    if (zip.file(`medias/video_${idx}.mp4`)) {
      p.video = URL.createObjectURL(new Blob([await zip.file(`medias/video_${idx}.mp4`).async("blob")]));
    }
    if (zip.file(`medias/audio_${idx}.mp3`)) {
      p.audio = URL.createObjectURL(new Blob([await zip.file(`medias/audio_${idx}.mp3`).async("blob")]));
    }
  });
  displayPoint(0);
});

function displayPoint(idx) {
  currentIndex = idx;
  const p = points[idx];
  pointContainer.innerHTML = `
    <div class="point">
      <h3>${p.title}</h3>
      <p>${p.comment}</p>
      <div class="media-preview">
        ${p.photo ? `<img src="${p.photo}" alt="photo">` : ""}
        ${p.video ? `<video controls><source src="${p.video}" type="video/mp4"></video>` : ""}
        ${p.audio ? `<audio controls><source src="${p.audio}" type="audio/mp3"></audio>` : ""}
      </div>
    </div>
  `;
}

document.getElementById("prevBtn").addEventListener("click", () => {
  if (currentIndex > 0) displayPoint(currentIndex - 1);
  else alert("Début de la visite.");
});

document.getElementById("nextBtn").addEventListener("click", () => {
  if (currentIndex < points.length - 1) displayPoint(currentIndex + 1);
  else alert("Fin de la visite.");
});
</script>
</body>
</html>
